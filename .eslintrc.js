module.exports = {
  root: true,
  extends: ['eslint:recommended', 'next/core-web-vitals'],
  overrides: [
    {
      files: ['pages/**/*.js'],
      rules: {
        'import/prefer-default-export': ['error'],
        'import/no-default-export': 0,
      },
    },
  ],
  env: { es2020: true },
  rules: {
    'array-bracket-spacing': ['error'],
    'array-callback-return': ['error'],
    'arrow-body-style': ['error', 'as-needed'],
    'arrow-parens': [2, 'as-needed', { requireForBlockBody: true }],
    'arrow-spacing': ['error'],
    'brace-style': ['error'],
    'class-methods-use-this': ['error'],
    'comma-dangle': [2, 'always-multiline'],
    'comma-spacing': ['error', { before: false, after: true }],
    'comma-style': ['error', 'last'],
    'consistent-return': ['error'],
    'default-param-last': ['error'],
    'dot-notation': ['error'],
    'eol-last': ['error'],
    eqeqeq: ['error'],
    'function-paren-newline': ['error', 'consistent'],
    'generator-star-spacing': ['error', {
      before: false, after: true,
      anonymous: 'neither',
      method: { before: true, after: true },
    }],
    'id-length': ['error', {
      properties: 'never',
      min: 3,
      exceptions: ['_', 'id', 'fs', '$'],
    }],
    indent: ['error', 2, { ignoredNodes: ['TemplateLiteral'] }],
    'implicit-arrow-linebreak': ['error'],
    'import/extensions': ['error'],
    'import/first': ['error'],
    'import/named': ['error'],
    'import/no-mutable-exports': ['error'],
    'import/no-unresolved': 2,
    'import/prefer-default-export': 0,
    'import/no-default-export': ['error'],
    'jsx-quotes': ['error', 'prefer-double'],
    'key-spacing': ['error', { mode: 'strict' }],
    'keyword-spacing': ['error'],
    'max-len': ['error', { code: 120, comments: 120, ignoreStrings: true }],
    'new-cap': ['error', { capIsNew: false }],
    'no-case-declarations': ['error'],
    'no-confusing-arrow': ['error'],
    'no-console': ['error'],
    'no-duplicate-imports': ['error'],
    'no-else-return': ['error'],
    'no-eval': ['error'],
    'no-mixed-operators': ['error'],
    'no-multi-assign': ['error'],
    'no-multi-spaces': ['error'],
    'no-multiple-empty-lines': ['error', { max: 1 }],
    'no-nested-ternary': ['error'],
    'no-new-wrappers': ['error'],
    'no-param-reassign': ['error', { props: true }],
    'no-plusplus': ['error'],
    'no-restricted-globals': ['error'],
    'no-restricted-properties': ['error'],
    'no-shadow': ['error'],
    'no-underscore-dangle': ['error'],
    'no-unneeded-ternary': ['error'],
    'no-unused-vars': [1, { ignoreRestSiblings: true }],
    'no-useless-constructor': ['error'],
    'nonblock-statement-body-position': ['error'],
    'object-curly-newline': ['error'],
    'object-curly-spacing': ['error', 'always'],
    'object-shorthand': ['error', 'always'],
    'one-var': ['error', 'never'],
    'operator-linebreak': ['error', 'before'],
    'padded-blocks': ['error', 'never'],
    'prefer-arrow-callback': ['error'],
    'prefer-const': ['error'],
    'prefer-destructuring': ['error'],
    'prefer-rest-params': ['error'],
    'prefer-spread': ['error'],
    'prefer-template': ['error'],
    quotes: ['error', 'single', { avoidEscape: true }],
    'quote-props': ['error', 'as-needed'],
    'react/jsx-boolean-value': ['error', 'never'],
    'react/jsx-child-element-spacing': ['error'],
    'react/jsx-closing-bracket-location': ['error'],
    'react/jsx-closing-tag-location': ['error'],
    'react/jsx-curly-brace-presence': ['error', 'never'],
    'react/jsx-curly-newline': ['error', 'consistent'],
    'react/jsx-curly-spacing': ['error', { when: 'never', children: { when: 'never' }, allowMultiline: true }],
    'react/jsx-indent': ['error', 2],
    'react/jsx-pascal-case': ['error'],
    'react/jsx-tag-spacing': ['error', { beforeSelfClosing: 'always', closingSlash: 'never', beforeClosing: 'never' }],
    'react/self-closing-comp': ['error', {
      component: true,
      html: true,
    }],
    semi: [2, 'never'],
    'space-before-blocks': ['error'],
    'space-in-parens': ['error'],
    'space-infix-ops': ['error'],
    'spaced-comment': ['error', 'always'],
  },
  settings: {
    'import/resolver': {
      typescript: {
        project: 'jsconfig.json',
      },
    },
  },
}
